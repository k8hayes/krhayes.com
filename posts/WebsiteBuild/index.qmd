---
title: "How I built my site"
subtitle: Migrating from blogdown to Quarto
date: "2024-04-15"
date-modified: last-modified
categories: [Workflow]
---

There's tons of resources out there for how to built a personal website as an academic, made by folks with actual expertise in web design, coding, etc.

I'd wanted to start my own blog / [digital garden](https://maggieappleton.com/garden-history) for years. Initially, the roadblock was imposter syndrome - did I actually have anything to write about? Would it be useful to anyone? isn't it all a bit cringe?[^1]

[^1]: Counterpoints:

    1.  I've never suffered from a lack of opinions
    2.  writing is useful to me so it doesn't really matter if it's useful to anyone else
    3.  cringe isn't real

Once those worries were ~~shouted down~~ overcome, the main roadblock became technical know-how. I originally developed my website using a bundle of tools including blogdown, github, netlify all centered around the very popular academic theme from hugo. I've had it for years now, but it was heavy-lifting - building it took what felt like a week of work back in 2020, and I couldn't update easily without having to relearn the folder structure rules each time.

Originally, I wanted to tweak the theme, add some blog pages and be done with it, but writeups like [this](https://masalmon.eu/2020/02/29/hugo-maintenance/) from Maelle Salmon discussing hugo theme maintenance and this [one](https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/) from Arielle on Quarto made me wonder if there was a better way.

The straw that broke the camel's back was ~~vanity~~ the [Tufte theme](https://quarto-dev.github.io/quarto-gallery/page-layout/tufte.html) that's possible in Quarto - per the requirements of receiving a degree in geography, my copy of *Visual Display of Quantitative Information* lives on my coffee table. Adding Tufte's beautiful sidenotes and column spacing is as easy as adding a line or two of yaml in Quarto and opens up a whole new world of snarky asides[^2].

[^2]: See: this entire writeup

### Personal Website Development 101

"*Have a personal website*" is advice you run into over and over when thinking about a scientific career. In my experience, that advice started and stopped there. Which is too bad, since questions like *What do I put on my website*? *How do I build one*? *How much time should I sink into this*? are the start of some potentially really interesting conversations.

Briefly[^3], I think the logic behind the advice "Have a website" is usually that websites make you findable. In the grand tradition of lagging behind every other field, academia doesn't typically use LinkedIn in any deep way and alternatives like ResearchGate or Academy haven't seemed to take off. So, a biographic / personal website can be a straightforward way to establish your web presence in science (or, at a minimum, make you slightly more google-able)[^4].

[^3]: lol

[^4]: there are so many Kate/Katherine Hayeses and they all seem to have gotten into life coaching lately

My two cents is that the easiest way to answer the questions: *What do I put on my website*? *How do I build one*? *How much time should I sink into this*? is to figure out your ultimate objective first.

I know that sounds obtuse: Kate, you just said prevailing advice is to have a website, isn't having the website the objective?

Sure, but what do you want to get out of having a website? Is it checking the box so you can move on with your life / science? Do you want to connect with other scientists in your field? Is it an exercise in coding?

No wrong answers here, but if you're hoping to check the box and get the hell off of social media[^5], then it'll shape how you build one and how much time you want to put in. If it works to have your website be a living CV, it might be worth finding a squarespace / weebly / etc platform where you can fill in the basic info, get a domain name and call it a day.

[^5]: good on you

For me, drafting a website was originally an exercise to get more comfortable with Github. I had had some exposure, but didn't use it consistently in my workflow and didn't really have any collaborators that used it. Using repositories to host a website seemed like a quick way to get a bunch more experience with version control. Hence my excuse to ~~procrastinate~~ take the long way round, instead of turning towards more pre-packaged templates.

When I first drafted my website as a ~~sophisticated procrastination technique~~ savy professional development exercise during my PhD, it was pretty sparse. I had my basic affiliation, interests, education information, a PDF copy of my CSV and links to my other online presences (ie, my google scholar profile, my github and my now mostly obsolete twitter profile). Out of imposter syndrome/FOMO, I added a Publications page and a Project page, but I'm not sure either added anything in retrospect.

But, I'd always been interested in expanding it. As a remote postdoc who works from home, I'd like more ways to interact with other scientists, and while it's probably presumptuous to assume any of this will be read at all, writing for even an imaginary audience has been a great way to write more day to day. Hence, blog.

## Switching from blogdown to quarto

### Initiating a quarto website

Initiating a Quarto website is shockingly easy. Working from Rstudio, you simply open a **New Project**, select **Quarto Website**, name it something new and click **Render** to preview.

That's it. 4 steps, X files, and you're previewing the structure. Now, your render won't be hosted anywhere but locally and you haven't attached it to Github yet, but already that's a much more easy entry than the one I remember from Hugo.

### 

To add a blog:

-   Initiatiate a quarto file for your landing page and call it something like **blog.qmd**

-   Navigate to your \_quarto.yml file which should have been created when you initiated the New Website process above

-   You should see yml code that looks like the following:

```         
project:
  type: website

website:
  title: "Katherine Hayes"
  navbar:
    right:
      - text: "About Me"
        file: about.qmd
    
format:
  html:
    theme: cosmo
    css: styles.css
    toc: false

editor: visual
```

Under navbar, you can now add a "Blog" label and point it towards the blog.qmd

start a folder called posts

start to fill it with posts

### Switching netlify hosts

I'd expected that my challenge would be deciphering the CSS / hugo language, but really it ended up being deciphering the folder structure within the website. Hugo hosts websites as static, meaning they compile upon request (more detail on the distinction between static and dynamic websites here)

*Static vs Dynamic*

A static website delivers web pages exactly as they are stored (in this case, as a series of folders and markdown files within a repository). Dynamic websites generate content in real time, meaning they can deliver web pages differently to different audiences (think a forum, in which the forum page will appear differently depending on the user who's logged in).

other resources

-   https://blog.djnavarro.net/posts/2022-04-20_porting-to-quarto/#playing-around
